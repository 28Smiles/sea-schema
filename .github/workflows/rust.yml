name: sea-schema

on:
  pull_request:
  push:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

jobs:

  clippy:
    name: Clippy
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true
          
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: >-
            --all-targets
            --all

  test:
    name: Unit Test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: >
            --all

      - uses: actions-rs/cargo@v1
        with:
          command: test

  postgres:
    name: Postgres
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        version: [13.3, 12.7, 11.12, 10.17, 9.6.22]
        project: [live, discovery, writer]
    services:
      postgres:
        image: postgres:${{ matrix.version }}
        env:
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_USER: sea
          POSTGRES_PASSWORD: sea
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            Cargo.lock
            target
          key: ${{ github.sha }}-${{ github.run_id }}-${{ runner.os }}-postgres-${{ matrix.project }}

      - name: Create DB
        run: psql -q postgres://sea:sea@localhost/postgres -c 'CREATE DATABASE "sakila"'

      - name: Import DB Schema
        run: psql -q postgres://sea:sea@localhost/sakila < sakila-schema.sql
        working-directory: ./tests/sakila/postgres

      - name: Import DB Data
        run: psql -q postgres://sea:sea@localhost/sakila < sakila-data.sql
        working-directory: ./tests/sakila/postgres

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: >
            --manifest-path tests/${{ matrix.project }}/postgres/Cargo.toml

      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: >
            --manifest-path tests/${{ matrix.project }}/postgres/Cargo.toml

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: >
            --manifest-path tests/${{ matrix.project }}/postgres/Cargo.toml
